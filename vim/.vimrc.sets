""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""" SETTINGS """""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" General Lets
let mapleader = ','
let maplocalleader = '_'
let b:match_ignorecase = 1

" miscellaneous settings
filetype plugin indent on       " Automatically detect file types
syntax on                       " Syntax highlighting
scriptencoding utf-8

" highlight
highlight clear SignColumn      " SignColumn should match background
highlight clear LineNr          " Current line number row will have same background color in relative mode

" Indent Guides
let g:indent_guides_start_level = 2
let g:indent_guides_guide_size = 1
let g:indent_guides_enable_on_vim_startup = 1

" Netrw & Vinegar
let g:netrw_list_hide='\(^\|\s\s\)\zs\.\S\+'
let g:netrw_hide=1              " hide hidden files
let g:netrw_dirhistmax=100      " keep more history
let g:netrw_altfile=1           " last edited file '#'
let g:netrw_liststyle=0         " thin
let g:netrw_altv=1              " open files on right
let g:netrw_preview=1           " open previews vertically
let g:netrw_use_errorwindow=0   " suppress error window

" Airline
let g:airline_theme = 'tomorrow'
let g:airline_powerline_fonts=1

" Emmet
let g:user_emmet_install_global = 0

" JavaScript Libraries Syntax
" (use none by default, rely .lvimrc settings to enable lib support)
let g:used_javascript_libs = ''

" JSDoc
let g:jsdoc_allow_input_prompt = 1
let g:jsdoc_allow_shorthand = 1
let g:jsdoc_return_description = 0
let g:jsdoc_tag_synonyms = { 'param': 'arg' }

" Pandoc
let g:pandoc#filetypes#handled = ["pandoc", "markdown", "rst", "textile", "extra"]
let g:pandoc#modules#disabled = ["spell"]
let g:pandoc#formatting#textwidth = 78
let g:pandoc#command#custom_open = "MyPandocOpen"

" Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_python_checkers=['flake8', 'pylint']
let g:syntastic_html_tidy_exec = 'tidy5'

" Tern
let g:tern_map_keys = 1
let g:tern_show_argument_hints = 'on_hold'

" Pencil / Writing Controls
let g:pencil#wrapModeDefault = 'soft'
let g:pencil#textwidth = 74
let g:pencil#joinspaces = 0
let g:pencil#cursorwrap = 1
let g:pencil#conceallevel = 3
let g:pencil#concealcursor = 'c'
let g:airline_section_x = '%{PencilMode()}'
let g:pencil#softDetectSample = 20
let g:pencil#softDetectThreshold = 130

" Local vimrc loading
let g:localvimrc_sandbox=0
let g:localvimrc_ask=0

" UltiSnips
let g:snips_author = 'Stephen Tudor'
let g:snips_author_email = 'smt@smt.io'
let g:UltiSnipsSnippetDirectories = ['UltiSnips']
" better key bindings for UltiSnipsExpandTrigger
" (http://stackoverflow.com/questions/14896327/ultisnips-and-youcompleteme/22253548#22253548)
let g:UltiSnipsExpandTrigger = '<Tab>'
let g:UltiSnipsJumpForwardTrigger = '<Tab>'
let g:UltiSnipsJumpBackwardTrigger = '<S-Tab>'

" YouCompleteMe
" make YCM compatible with UltiSnips (using supertab)
if OSX()
  let g:ycm_path_to_python_interpreter = '/usr/bin/python'
else
  let g:ycm_path_to_python_interpreter = '/usr/bin/python2'
endif
let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
let g:ycm_server_keep_logfiles = 1

" SuperTab
let g:SuperTabDefaultCompletionType = '<C-n>'

" Limelight
let g:limelight_default_coefficient = 0.5

" sets
" Use :help 'option' to see the documentation for the given option.
setglobal nobomb
set nobomb
set autoindent                  " Indent at the same level of the previous line
set autoread                    " Read file again if changed on disk
set background=dark             " Assume a dark background
set backspace=indent,eol,start  " Backspace for dummies
set backup                      " Backups are nice ...
set colorcolumn=80              " Visualize 80-char width
set complete-=i
set cursorline                  " Highlight current line
set display+=lastline
set fileencoding=utf-8
set fileformats+=mac
set hidden                      " Allow buffer switching without saving
set hlsearch                    " Highlight search terms
set ignorecase                  " Case insensitive search
set incsearch                   " Find as you type search
set linespace=0                 " No extra spaces between rows
set list                        " Show whitespace
set listchars=tab:›\ ,trail:•,extends:#,precedes:#,nbsp:. " Characters to symbolize whitespace
set magic                       " For regexes turn magic on
set mouse=a                     " Automatically enable mouse usage
set mousehide                   " Hide the mouse cursor while typing
set noerrorbells
set noexpandtab
set nojoinspaces                " Prevents inserting two spaces after punctuation on a join (J)
set nospell                     " Spell checking off
set nowrap                      " Do not wrap long lines
set nrformats-=octal            " Remove octal format to avoid confusion
set number                      " Line numbers on
set pastetoggle=<F12>           " pastetoggle (sane indentation on pastes)
set scrolljump=5                " Lines to scroll when cursor leaves screen
set scrolloff=3                 " Minimum lines to keep above and below cursor
set sessionoptions-=options
set shiftwidth=4                " Use indents of 4 spaces
set shortmess+=aoOtTI           " Abbrev. of messages (avoids 'hit enter')
set showmatch                   " Show matching brackets/parenthesis
set showmode                    " Display the current mode
set sidescrolloff=5
set smarttab
set softtabstop=4               " Let backspace delete indent
set splitbelow                  " Puts new split windows to the bottom of the current
set splitright                  " Puts new vsplit windows to the right of the current
set tabstop=4                   " An indentation every four columns
set ttimeout
set ttimeoutlen=100             " Timeout on key codes
set timeoutlen=400              " Timeout on mappings
set viewoptions=folds,options,cursor,unix,slash " Better Unix / Windows compatibility
set virtualedit=onemore         " Allow for cursor beyond last character
set whichwrap=b,s,h,l,<,>,[,]   " Backspace and cursor keys wrap too
set wildmenu
set wildmode=list:longest,full  " Command <Tab> completion, list matches, then longest common part, then all.
set winminheight=0              " Windows can be 0 line high

" conditional settings
if v:version > 703 || v:version == 703 && has("patch541")
  set formatoptions+=j          " Delete comment character when joining commented lines
endif

if has('path_extra')
  setglobal tags-=./tags tags^=./tags;
endif

if &history < 1000
  set history=1000
endif

if &tabpagemax < 15
  set tabpagemax=15
endif

if !empty(&viminfo)
  set viminfo^=!
endif

if has('persistent_undo')
  set undofile                  " So is persistent undo ...
  set undolevels=1000           " Maximum number of changes that can be undone
  set undoreload=10000          " Maximum number lines to save for undo on a buffer reload
endif

if has('cmdline_info')
  set ruler                     " Show the ruler
  set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) " A ruler on steroids
  set showcmd                   " Show partial commands in status line and selected characters/lines in visual mode
endif

if has('conceal')
  set conceallevel=2 concealcursor=
endif

if has('statusline')
  set laststatus=2
  set statusline=%<%f\                     " Filename
  set statusline+=%w%h%m%r%{PencilMode()}\ " Options
  set statusline+=%{fugitive#statusline()} " Git Hotness
  set statusline+=\ [%{&ff}/%Y]            " Filetype
  set statusline+=\ [%{getcwd()}]          " Current dir
  set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
  set statusline+=%#warningmsg#
  set statusline+=%{SyntasticStatuslineFlag()}
  set statusline+=%*
endif

if has('clipboard')
  if LINUX()
    set clipboard=unnamedplus
  else
    set clipboard=unnamed
  endif
endif

if !WINDOWS() || &shell =~# 'fish$'
  set shell=/bin/bash
endif

if has('gui_running')
  set guioptions-=T
  set lines=40
  set guifont=Meslo\ LG\ S\ for\ Powerline
  set encoding=utf-8
  set transparency=0
  syntax enable
  set background=dark
  colorscheme seoul256
else
  let g:indent_guides_enable_on_vim_startup = 0
  set t_Co=256
  syntax enable
  set background=dark
  colorscheme seoul256
endif

if WINDOWS()
  set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after
  if has("multi_byte")
    set termencoding=cp850
    set encoding=utf-8
    setglobal fileencoding=utf-8
    set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
  endif
endif

" vim: set sw=2 ts=2 sts=2 et tw=78 nospell:
