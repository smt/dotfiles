""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""" PLUGINS """"""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

filetype off

function! BuildYCM(info)
  " info is a dictionary with 3 fields
  " - name:   name of the plugin
  " - status: 'installed', 'updated', or 'unchanged'
  " - force:  set on PlugInstall! or PlugUpdate!
  if a:info.status == 'installed' || a:info.force
    !./install.sh
  endif
endfunction

" Auto-install plug.vim
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

" Load matchit.vim, but only if the user hasn't installed a newer version.
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

" General
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'embear/vim-localvimrc'
Plug 'eiginn/netrw'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-obsession'
Plug 'reedes/vim-wheel'
Plug 'tmux-plugins/vim-tmux-focus-events'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': 'yes \| ./install' }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/vim-easy-align', { 'on': ['<Plug>(EasyAlign)', 'EasyAlign'] }

" Styling
Plug 'reedes/vim-colors-pencil'
Plug 'romainl/Apprentice'
Plug 'morhetz/gruvbox'
Plug 'noahfrederick/vim-hemisu'
Plug 'w0ng/vim-hybrid'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/seoul256.vim'
Plug 'mhinz/vim-startify'

" Writing/Authoring Tools
Plug 'reedes/vim-pencil'
Plug 'tpope/vim-abolish'
Plug 'junegunn/limelight.vim', { 'for': ['pandoc'] }
Plug 'junegunn/goyo.vim', { 'for': ['pandoc'] }
Plug 'vim-pandoc/vim-pandoc', { 'for': ['pandoc'] }
Plug 'vim-pandoc/vim-pandoc-after', { 'for': ['pandoc'] }
Plug 'vim-pandoc/vim-pandoc-syntax', { 'for': ['pandoc'] }
Plug 'reedes/vim-lexical', { 'for': ['pandoc'] }
Plug 'reedes/vim-litecorrect', { 'for': ['pandoc'] }
Plug 'reedes/vim-textobj-sentence'
Plug 'reedes/vim-wordy'

" Development Tools
Plug 'gabesoft/vim-ags'
Plug 'tpope/vim-commentary'
Plug 'mattn/emmet-vim', { 'for': ['html'] }
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'Wolfy87/vim-syntax-expand'
Plug 'tpope/vim-fugitive'
Plug 'mattn/gist-vim'
Plug 'gregsexton/gitv', { 'on': 'Gitv' }
Plug 'tpope/vim-haystack'
Plug 'cohama/lexima.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
Plug 'tpope/vim-projectionist'
Plug 'tomtom/quickfixsigns_vim'
Plug 'tpope/vim-ragtag'
Plug 'tpope/vim-rsi'
Plug 'mhinz/vim-signify'
Plug 'tpope/vim-sleuth'
Plug 'AndrewRadev/sideways.vim', { 'on': ['SidewaysLeft', 'SidewaysRight'] }
Plug 'honza/vim-snippets'
Plug 'tpope/vim-speeddating'
Plug 'ervandew/supertab'
Plug 'tpope/vim-surround'
Plug 'scrooloose/syntastic'
Plug 'majutsushi/tagbar', { 'on': 'TagbarToggle' }
Plug 'SirVer/ultisnips'
Plug 'mbbill/undotree', { 'on': 'UndotreeToggle' }
Plug 'tpope/vim-unimpaired'
Plug 'Valloric/YouCompleteMe', { 'do': function('BuildYCM') }

" Lang-specific
if v:version >= 703
  Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
  Plug 'kovisoft/paredit', { 'for': 'clojure' }
  Plug 'guns/vim-clojure-static', { 'for': 'clojure' }
  Plug 'guns/vim-clojure-highlight', { 'for': 'clojure' }
  Plug 'vim-ruby/vim-ruby', { 'for': 'ruby' }
endif
Plug 'kchmck/vim-coffee-script', { 'for': 'coffee' }
Plug 'hail2u/vim-css3-syntax', { 'for': ['css', 'less', 'scss'] }
Plug 'ElmCast/elm-vim', { 'for': 'elm' }
Plug 'fatih/vim-go', { 'for': 'go' }
Plug 'othree/html5.vim', { 'for': 'html' }
Plug 'Glench/Vim-Jinja2-Syntax', { 'for': 'html' }
Plug 'digitaltoad/vim-jade', { 'for': 'jade' }
Plug 'othree/yajs.vim', { 'for': ['javascript', 'jsx', 'typescript'] }
Plug 'othree/es.next.syntax.vim', { 'for': ['javascript', 'jsx', 'typescript'] }
Plug 'moll/vim-node', { 'for': 'javascript' }
Plug 'burnettk/vim-angular', { 'for': 'javascript' }
Plug 'claco/jasmine.vim', { 'for': 'javascript' }
Plug 'othree/javascript-libraries-syntax.vim', { 'for': ['javascript', 'jsx'] }
Plug 'marijnh/tern_for_vim', { 'for': 'javascript', 'do': 'npm install' }
Plug 'heavenshell/vim-jsdoc', { 'for': ['javascript', 'typescript'] }
Plug 'elzr/vim-json', { 'for': 'json' }
Plug 'mxw/vim-jsx', { 'for': 'jsx' }
Plug 'groenewege/vim-less', { 'for': 'less' }
Plug 'klen/python-mode', { 'for': 'python' }
Plug 'python_match.vim', { 'for': 'python' }
Plug 'davidhalter/jedi-vim', { 'for': 'python' }
Plug 'JarrodCTaylor/vim-python-test-runner', { 'for': 'python' }
Plug 'joonty/vdebug', { 'for': 'python' }
Plug 'rust-lang/rust.vim', { 'for': 'rust' }
Plug 'derekwyatt/vim-scala', { 'for': 'scala' }
Plug 'cakebaker/scss-syntax.vim', { 'for': 'scss' }
Plug 'wavded/vim-stylus', { 'for': 'stylus' }
Plug 'tmux-plugins/vim-tmux', { 'for': 'tmux' }
Plug 'leafgarland/typescript-vim', { 'for': 'typescript' }

call plug#end()

" vim: set sw=2 ts=2 sts=2 et tw=78 nospell:
