""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""" AUTOCMD """"""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

if has('autocmd')

  augroup general_buffer
    au!
    au BufReadPost setlocal nobomb
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
    " au BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif
  augroup END

  augroup func_listchars
    au!
    au FileType c,cpp,clj,cljs,lisp,{c,le,sc}ss,stylus,go,{ht,x}ml,jade,java,{java,type}script,json,php,twig,python,ruby,vim,yaml
          \ setlocal list
  augroup END

  augroup func_whitespace
    au!
    au FileType c,cpp,clj,cljs,lisp,{c,le,sc}ss,stylus,go,{ht,x}ml,j2,jade,java,{java,type}script,json,php,twig,python,ruby,vim,yaml
          \ autocmd BufWritePre <buffer> call StripTrailingWhitespace()
  augroup END

  augroup func_omnicompletion
    au!
    au FileType {c,le,sc}ss,stylus setlocal omnifunc=csscomplete#CompleteCSS
    au FileType html setlocal omnifunc=htmlcomplete#CompleteTags
    au FileType {java,type}script setlocal omnifunc=javascriptcomplete#CompleteJS
    au FileType python setlocal omnifunc=pythoncomplete#Complete
    au FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
  augroup END

  augroup func_resize
    au!
    au VimResized * :wincmd =
  augroup END

  augroup type_css
    au!
    au FileType {c,le,sc}ss setlocal et ts=4 sts=4 sw=4
    au FileType stylus setlocal et ts=2 sts=2 sw=2
    au FileType {c,le,sc}ss,stylus setlocal foldmethod=marker foldmarker={,}
    au FileType scss setlocal iskeyword+=-
  augroup END

  augroup type_html
    au!
    au BufRead,BufNewFile *.phtml setlocal filetype=html.php
    au BufRead,BufNewFile *.jsp setlocal filetype=html.jsp
    au FileType html setlocal et ts=4 sts=4 sw=4
    " Auto-tidy selection
    au FileType html vnoremap <leader>x :!tidy -q -i --show-errors 0 --show-body-only 1 --wrap 0<cr><cr>
  augroup END

  augroup type_gitcommit
    au!
    au FileType gitcommit au! BufEnter COMMIT_EDITMSG call setpos('.', [0, 1, 1, 0])
  augroup END

  augroup type_go
    au!
    au FileType go setlocal et ts=4 sts=4 sw=4
  augroup END

  augroup type_haskell
    au!
    au FileType haskell setlocal et ts=2 sts=2 sw=2
          \ | setlocal omnifunc=necoghc#omnifunc
  augroup END

  augroup type_java
    au!
    au FileType java setlocal et ts=4 sts=4 sw=4
  augroup END

  augroup type_javascript
    au!
    au FileType {java,type}script setlocal et ts=2 sts=2 sw=2
          \ | nnoremap <leader>b Odebugger;<esc>
    au BufWritePost,BufReadPost *.js{,x} Neomake
  augroup END

  augroup type_jinja
    au!
    autocmd BufNewFile,BufRead *.jinja{,2},*.j2 setlocal ft=jinja2
          \ | setlocal commentstring={#%s#}
  augroup END

  augroup type_json
    au!
    au FileType json setlocal et ts=2 sts=2 sw=2
          \ | setlocal equalprg=python\ -m\ json.tool
  augroup END

  augroup type_lisp
    au!
    au BufRead,BufNewFile *.{clj,cljs,el} setlocal filetype=lisp
    au FileType lisp setlocal et ts=2 sts=2 sw=2
  augroup END

  augroup type_make
    au!
    au FileType make setlocal noet ts=4 sts=4 sw=4
  augroup END

  augroup type_mutt
    au!
    au BufRead,BufNewFile *mutt-* setlocal filetype=mail
    au FileType mail setlocal tw=72
  augroup END

  augroup type_pandoc
    au!
    au BufRead,BufNewFile *.{ft,md,markdown} setlocal filetype=pandoc
    au FileType pandoc setlocal et ts=4 sts=4 sw=4
  augroup END

  augroup type_php
    au!
    au FileType php setlocal et ts=4 sts=4 sw=4
  augroup END

  augroup type_python
    au!
    " PEP8 compliance (set 1 tab = 4 chars explicitly, even if set
    " earlier, as it is important)
    " au FileType python setlocal et ts=4 sts=4 sw=4
    "       \ | setlocal textwidth=78
    "       \ | match ErrorMsg '\%>120v.\+'

    " But disable autowrapping as it is super annoying
    " au FileType python setlocal formatoptions-=t
    au FileType python BracelessEnable +indent +highlight
    au BufWritePost,BufReadPost *.py Neomake
  augroup END

  augroup type_rst
    au FileType rst setlocal et ts=4 sts=4 sw=4
  augroup END

  augroup type_ruby
    au!
    au FileType ruby setlocal et ts=2 sts=2 sw=2
  augroup END

  augroup type_tmux
    au!
    au BufRead,BufNewFile .tmux.conf setlocal filetype=tmux.conf
  augroup END

  augroup type_vim
    au!
    au FileType vim setlocal et ts=2 sts=2 sw=2

    " Bind <F1> to show the keyword under cursor
    " general help can still be entered manually, with :h
    au FileType vim noremap <buffer> <F1> <Esc>:help <C-r><C-w><CR>
    au FileType vim noremap! <buffer> <F1> <Esc>:help <C-r><C-w><CR>
  augroup END

  augroup type_xml
    au!
    au FileType xml setlocal et ts=4 sts=4 sw=4
  augroup END

  augroup type_yaml
    au!
    au BufRead,BufNewFile *.fdoc setlocal filetype=yaml
    au FileType yaml setlocal et ts=2 sts=2 sw=2
  augroup END

  augroup bundle_pencil
    au!
    au FileType pandoc
          \   call pencil#init({'textwidth': 78})
          \ | call lexical#init()
          \ | call litecorrect#init()
          \ | setlocal spell spl=en_us fdl=4 noru nonu nornu
          \ | setlocal fdo+=search
    " au FileType git,gitsendemail,*commit*,*COMMIT*
    "       \   call pencil#init({'wrap': 'hard', 'textwidth': 72})
    "       \ | call litecorrect#init()
    "       \ | setlocal spell spl=en_us et sw=2 ts=2 noai
    " au FileType mail         call pencil#init({'wrap': 'hard', 'textwidth': 60})
    "       \ | call litecorrect#init()
    "       \ | setlocal spell spl=en_us et sw=2 ts=2 noai nonu nornu
    " au FileType {ht,x}ml     call pencil#init({'wrap': 'soft'})
    "       \ | call litecorrect#init()
    "       \ | setlocal spell spl=en_us et sw=2 ts=2
  augroup END

  augroup bundle_emmet
    au!
    au FileType html,{c,le,sc}ss EmmetInstall
  augroup END

  augroup bundle_goyo
    au!
    au User GoyoEnter nested call <SID>goyo_enter()
    au User GoyoLeave nested call <SID>goyo_leave()
  augroup END

  augroup bundle_surround
    au!
    " FileType-dependent mapping of "-" (ASCII 45) as a replacement string
    au FileType php let b:surround_45 = "<?php \r ?>"
  augroup END

endif


function! s:goyo_enter()
  silent !tmux set status off
  set noshowmode
  set noshowcmd
  set scrolloff=999
  let b:quitting = 0
  let b:quitting_bang = 0
  autocmd QuitPre <buffer> let b:quitting = 1
  cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!
  Limelight
endfunction

function! s:goyo_leave()
  silent !tmux set status on
  set showmode
  set showcmd
  set scrolloff=5
  " Quit Vim if this is the only remaining buffer
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
      qa!
    else
      qa
    endif
  endif
  Limelight!
endfunction

" vim: set sw=2 ts=2 sts=2 et tw=78 nospell:
